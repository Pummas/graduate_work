version: '3.7'
services:
  nginx:
    image: nginx:1.23.3-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - ugc_service

  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_1_data:/var/lib/zookeeper/data

  broker-1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-1
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE_DOCKER://broker-1:9092,ON_HOST://localhost:39092,INTERNAL://broker-1:29092
    env_file:
      - .env
    volumes:
      - broker_1_data:/var/lib/kafka/data

  etl_ugc:
    image: etl_ugc
    restart: "always"
    container_name: etl_kafka
    env_file:
      - .env
    depends_on:
      - broker-1

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data


  clickhouse-node1:
    image: yandex/clickhouse-server:21.3
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    volumes:
      #- ./etl_ugc/data/node1:/etc/clickhouse-server
      - clickhouse_1_data:/var/lib/clickhouse/
    depends_on:
      - zookeeper


  ugc_service:
    restart: "always"
    image: ugc_service
    container_name: ugc_service
    env_file:
        - .env
    depends_on:
        - broker-1

  mongodb_ugc:
    image: mongo:latest
    environment:
      MONGO_INITDB_DATABASE: prod-db
      MONGO_INITDB_ROOT_USERNAME: user_name
      MONGO_INITDB_ROOT_PASSWORD: user_password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_ugc_data:/data/db


  auth:
    restart: "always"
    image: auth_service
    container_name: auth
    volumes:
      - ./auth/src/:/opt/app/
    env_file:
      - .env
    depends_on:
      - postgres_auth
      - redis_auth

  redis_auth:
    image: redis:7.0.5-alpine
    container_name: redis_auth
    command: redis-server --requirepass ${REDIS_AUTH_PASSWORD} --save 20 1
    volumes:
      - redis_auth_data:/data

  postgres_auth:
    image: postgres:15.1-alpine
    container_name: postgres_auth
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${PG_AUTH_USER}
      - POSTGRES_PASSWORD=${PG_AUTH_PASSWORD}
      - POSTGRES_DB=${PG_AUTH_DB_NAME}

  backend:
    restart: "always"
    image: backend_service
    container_name: backend
    volumes:
      - ./backend/src/:/opt/app/
    env_file:
      - .env
    depends_on:
      - elasticsearch_movies
      - redis_backend

  redis_backend:
    image: redis:7.0.5-alpine
    container_name: redis_backend
    command: redis-server --requirepass ${REDIS_BACKEND_PASSWORD} --maxmemory ${REDIS_BACKEND_MAXMEMORY} --maxmemory-policy allkeys-lru

  elasticsearch_movies:
    image: elasticsearch:8.6.1
    container_name: elasticsearch_movies
    volumes:
      - elasticsearch_movies_data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

volumes:
  zookeeper_1_data:
  broker_1_data:
  zookeeper_data:
  clickhouse_1_data:
  mongodb_ugc_data:
  redis_auth_data:
  postgres_auth_data:
  elasticsearch_movies_data:
